@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@model CodeSparks.Data.Models.Spark

@{
    ViewData["Title"] = "Spark Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <div>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> <span>|</span>
                }
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
        <div class="col-md-6">
            <h4>@Html.DisplayFor(model => model.Name)</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.IsPublic)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.IsPublic)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Category)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Category)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Url)
                </dt>
                <dd class="col-sm-10">
                    @if (string.IsNullOrEmpty(Model.Url))
                    {
                        <span>-</span>
                    }
                    else
                    {
                        <a href="@Model.Url" target="_blank">@Model.Url</a>
                    }
                </dd>
                <dt class="col-sm-2">
                    Status
                </dt>
                <dd class="col-sm-10">
                    @ViewBag.Status
                </dd>
            </dl>
        </div>
    </div>
</div>

<hr />
<h4>Comments</h4>

@if (User?.Identity?.IsAuthenticated != true)
{
    <div class="alert alert-warning mb-3" role="alert">
        You are posting as an anonymous user. <a href="/Account/Login">Sign in</a> to post with your username.
    </div>
}

<div id="comment-section">
    <form asp-action="AddComment" method="post">
        <input type="text" class="form-control" id="commentInput" placeholder="Add a comment..." onclick="expandCommentBox()">
        <div id="commentBox" style="display:none;">
            <textarea class="form-control" id="commentText" name="commentText" rows="3"></textarea>
            <button type="submit" class="btn btn-primary mt-2">Save</button>
        </div>
        <input type="hidden" name="id" value="@Model.Id" />
    </form>
</div>

<div class="mt-4">
    @foreach (var comment in Model.Comments)
    {
        var userName = comment.User?.UserName;
        <div class="comment-box mb-3">
            @if (string.IsNullOrEmpty(userName))
            {
                <strong>Anonymous:</strong>
            }
            else
            {
                <a href="@Url.Page("/Profile", new { userName = userName })">@userName</a><span>:</span>
            }
            
            @comment.Text
            @* <p><small>@comment.DatePosted.ToString("g")</small></p>  TODO: *@
        </div>
    }
</div>

@section Scripts {
    <script>
        function expandCommentBox() {
            document.getElementById("commentInput").style.display = "none";
            var commentBox = document.getElementById("commentBox");
            commentBox.style.display = "block";
            document.getElementById("commentText").focus();
        }
    </script>
}
